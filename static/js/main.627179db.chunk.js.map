{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","constants.js","loader.svg","containers/App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","cardComponent","robots","map","user","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","log","setState","Component","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","App","dispatch","useDispatch","searchField","useSelector","searchRobots","requestRobots","isPending","onRequestRobots","fetch","then","response","json","data","payload","catch","useEffect","filteredRobots","filter","robot","toLowerCase","includes","event","text","target","value","class","loader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAceA,G,MAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACC,6BAAKF,IACL,4BAAIC,YCYOK,EAjBE,SAAC,GAAgB,IAC3BC,EAD0B,EAAbC,OACUC,KAAI,SAACC,GACjC,OACC,cAAC,EAAD,CACCR,GAAIQ,EAAKR,GACTF,KAAMU,EAAKV,KACXC,MAAOS,EAAKT,WAIf,OACC,mCACIM,KCASI,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACpB,OACC,qBAAKT,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCCI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACEJ,EAAMK,Y,gCCkBKC,E,kDApBd,WAAaN,GAAQ,IAAD,8BACnB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHQ,E,8DAOFC,EAAOC,GACxBC,KAAKX,MAAMY,IAAI,CAAEH,QAAOC,SACxBC,KAAKE,SAAS,CAAEL,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACP,0DAEDG,KAAKX,MAAMK,a,GAjBQS,aCFfC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAwB,wBCJtB,G,MAAA,IAA0B,oCCwD1BC,MA9Cf,WAEC,IAAMC,EAAWC,cACRC,EAAgBC,aACtB,SAAChB,GAAD,OAAWA,EAAMiB,gBADXF,YAHK,EAOuBC,aAClC,SAAChB,GAAD,OAAWA,EAAMkB,iBADZlC,EAPM,EAONA,OAAQmC,EAPF,EAOEA,UAIVC,GAXQ,EAOalB,MAIH,WACrBW,GCV+B,SAACA,GACnCA,EAAS,CAAExB,KAAMoB,IACjBY,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIZ,EAAS,CAAExB,KAAMqB,EAAwBgB,QAASD,OAC/DE,OAAM,SAAAzB,GAAK,OAAIW,EAAS,CAAExB,KAAMsB,EAAuBe,QAASxB,YDYjE0B,qBAAU,WACTR,MACE,IAEH,IAAMS,EAAiB7C,EAAO8C,QAAO,SAAAC,GAAK,OAAIA,EAAMvD,KAAKwD,cAAcC,SAASlB,EAAYiB,kBAC5F,OACG,sBAAKrD,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAZO,SAAC8C,GClBK,IAACC,EDmB7BtB,GCnB6BsB,EDmBLD,EAAME,OAAOC,MCnBE,CACxChD,KAAMmB,EACNkB,QAASS,QD6BJ,cAAC,EAAD,UAEGhB,EAEA,qCACC,oBAAImB,MAAM,SAAV,wBACD,qBAAKA,MAAM,SAASzD,IAAK0D,EAAQ3D,IAAI,eAGpC,cAAC,EAAD,UACE,cAAC,EAAD,CAAUI,OAAQ6C,YEpCfW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCARO,EAAqB,CAC1BjC,YAAa,IAYRkC,EAAqB,CAC1B9B,WAAW,EACXnC,OAAQ,GACRkB,MAAO,ICXFgD,G,MAASC,0BAETC,EAAcC,YAAgB,CAAEpC,aDHV,WAA8C,IAA7CjB,EAA4C,uDAApCgD,EAAoBM,EAAgB,uDAAP,GACjE,OAAOA,EAAOjE,MACb,KAAKmB,EACJ,OAAO+C,OAAOC,OAAO,GAAIxD,EAAO,CAAEe,YAAauC,EAAO5B,UACvD,QACC,OAAO1B,ICF0CkB,cDYvB,WAA8C,IAA7ClB,EAA4C,uDAApCiD,EAAoBK,EAAgB,uDAAP,GAClE,OAAOA,EAAOjE,MACb,KAAKoB,EACJ,OAAO8C,OAAOC,OAAO,GAAIxD,EAAO,CAAEmB,WAAW,IAC9C,KAAKT,EACJ,OAAO6C,OAAOC,OAAO,GAAIxD,EAAO,CAAEhB,OAAQsE,EAAO5B,QAASP,WAAW,IACtE,KAAKR,EACJ,OAAO4C,OAAOC,OAAO,GAAIxD,EAAO,CAAEE,MAAOoD,EAAO5B,QAASP,WAAW,IACrE,QACC,OAAOnB,MCpBJyD,EAAQC,YAAYN,EAAaO,YAAgBC,IAAiBV,IAExEW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACC,cAAC,EAAD,QAGHO,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.627179db.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-S'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\tconst cardComponent = robots.map((user) => {\r\n\t\treturn (\r\n\t\t\t<Card\r\n\t\t\t\tid={user.id}\r\n\t\t\t\tname={user.name}\r\n\t\t\t\temail={user.email}\r\n\t\t\t\t/>\r\n\t\t);\r\n\t})\r\n\treturn (\r\n\t\t<>\r\n\t    {cardComponent}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search'\r\n\t\t\t\tplaceholder='search robots'\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{ overflowY: 'scroll', border: '1px solid black', height: '800px' }}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.props.log({ error, info })\r\n\t\tthis.setState({ hasError: true })\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>Oooops. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","export default __webpack_public_path__ + \"static/media/loader.4496180b.svg\";","import React, { useEffect } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll.js';\r\nimport ErrorBoundary from '../components/ErrorBoundary.js';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setSearchField, requestRobots } from '../actions'\r\nimport './App.css';\r\nimport loader from '../loader.svg';\r\n\r\nfunction App() {\r\n\r\n\tconst dispatch = useDispatch() \r\n  const { searchField } = useSelector(\r\n    (state) => state.searchRobots\r\n\t)\r\n\r\n\tconst { robots, isPending, error } = useSelector(\r\n    (state) => state.requestRobots\r\n\t)\r\n\r\n\tconst onRequestRobots = () => {\r\n    dispatch(requestRobots())\r\n \t}\r\n\r\n\tconst onSearchChange = (event) => {\r\n\t\tdispatch(setSearchField(event.target.value))\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tonRequestRobots()\r\n\t}, []);\r\n\r\n\tconst filteredRobots = robots.filter(robot => robot.name.toLowerCase().includes(searchField.toLowerCase()))\r\n\treturn (\r\n    <div className='tc'>\r\n      <h1 className='f1'>RoboFriends</h1>\r\n      <SearchBox searchChange={onSearchChange}/>\r\n      <Scroll>\r\n        { \r\n        \tisPending \r\n        \t?\r\n    \t    <>\r\n    \t    \t<h1 class=\"header\">Loading...</h1>\r\n   \t \t\t\t\t<img class=\"loader\" src={loader} alt=\"Loading\"/>\r\n\t\t\t\t\t</>\r\n        \t:\r\n          <ErrorBoundary>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundary>\r\n        }\r\n      </Scroll>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from './constants.js'\r\n\r\nexport const setSearchField = (text) => ({\r\n\ttype: CHANGE_SEARCH_FIELD,\r\n\tpayload: text\r\n})\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n\tdispatch({ type: REQUEST_ROBOTS_PENDING });\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t.then(response => response.json())\r\n\t.then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n\t.catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from './constants.js'\r\n\r\nconst initialStateSearch = {\r\n\tsearchField: ''\r\n}\r\n\r\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\r\n\tswitch(action.type) {\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\treturn Object.assign({}, state, { searchField: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst initialStateRobots = {\r\n\tisPending: false,\r\n\trobots: [],\r\n\terror: ''\r\n}\r\n\r\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\r\n\tswitch(action.type) {\r\n\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\t\treturn Object.assign({}, state, { isPending: true });\r\n\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, { robots: action.payload, isPending: false});\r\n\t\tcase REQUEST_ROBOTS_FAILED:\r\n\t\t\treturn Object.assign({}, state, { error: action.payload, isPending: false});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './containers/App'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { searchRobots, requestRobots } from './reducers.js'\r\nimport 'tachyons';\r\n\r\nconst logger = createLogger();\r\n\r\nconst rootReducer = combineReducers({ searchRobots, requestRobots })\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    \t<App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}